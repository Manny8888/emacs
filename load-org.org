Some of the org-mode packages have already been loaded in the init.el
file. The init.el file also made sure that org mode was installed, so
no need to double-check that here. 

* Keybindings

#+BEGIN_SRC emacs-lisp
  (define-key global-map "\C-cl" 'org-store-link)
  (define-key global-map "\C-ca" 'org-agenda)
  (global-set-key (kbd "C-'") 'org-cycle-agenda-files)
#+END_SRC

* Exporting
HTML and latex shown by default, let's add markdown:

#+BEGIN_SRC emacs-lisp
  (use-package ox-md)
#+END_SRC

I don't like how timestamps look when org exports them. This makes it
more bearable. 

#+BEGIN_SRC emacs-lisp
  (add-to-list 'org-export-filter-timestamp-functions
               #'endless/filter-timestamp)
  (defun endless/filter-timestamp (trans back _comm)
    "Remove <> around time-stamps."
    (pcase back
      ((or `jekyll `html)
       (replace-regexp-in-string "&[lg]t;" "" trans))
      (`latex
       (replace-regexp-in-string "[<>]" "" trans))))
  (setq-default org-display-custom-times t)
  ;;; Before you ask: No, removing the <> here doesn't work.
  (setq org-time-stamp-custom-formats
        '("<%d %b %Y>" . "<%d/%m/%y %a %H:%M>"))
#+END_SRC

Finally, I use xelatexmk so that org uses xelatex by default. I really
like the [[https://github.com/matze/mtheme][metropolis beamer theme.]] 

#+BEGIN_SRC emacs-lisp
  (setq org-latex-pdf-process (list "latexmk -f -shell-escape -xelatex %f"))
#+END_SRC

This makes org export smart quotes so that it uses ~``word``~ style
quotes for latex export: 

#+BEGIN_SRC emacs-lisp
  (setq org-export-with-smart-quotes t)
#+END_SRC

* Code blocks
  Org-babel is included in org. We just need to tell it which
  languages to load. And don't ask us if we're sure we want to run
  code blocks when we ~C-c C-c~. Finally, open the code block in the
  current window when we use ~C-'~ 

#+BEGIN_SRC emacs-lisp
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((emacs-lisp . t)
     (latex . t)
     (python . t)
     (R . t)))
  (setq org-confirm-babel-evaluate nil)
  (setq org-src-window-setup 'current-window)
#+END_SRC

** Code block font locking
   This will make the contents of code blocks use the same font
   locking (syntax highlighting) as the major mode. It'll also make
   the tab key act like you want it to inside code blocks. 

#+BEGIN_SRC emacs-lisp
    (setq org-src-fontify-natively     t
          org-src-tab-acts-natively    t)
#+END_SRC

* References 
  I use org-ref to manage my references. 

#+BEGIN_SRC emacs-lisp
  (use-package org-ref
    :ensure t
    :init
    (setq org-ref-bibliography-notes "~/Dropbox/bibliography/notes.org"
          org-ref-default-bibliography '("~/Dropbox/bibliography/references.bib")
          org-ref-pdf-directory "~/Dropbox/bibliography/bibtex-pdfs/"
          org-ref-default-citation-link "citep"))
#+END_SRC

* Display images
  Org has a neat trick that it can display images. This is especially
  handy for when org-babel outputs a graph, since we can see the graph
  and then type around it. Let's turn that on:

#+BEGIN_SRC emacs-lisp
  (add-hook 'org-babel-after-execute-hook 'org-display-inline-images)   
  (add-hook 'org-mode-hook 'org-display-inline-images)
#+END_SRC

* Agenda files
Here's where I set which files are added to org-agenda, which controls
org's global todo list, scheduling, and agenda features. I use Dropbox
to keep these files in sync across computers. 

#+BEGIN_SRC emacs-lisp
  (setq org-directory "~/Dropbox/org/")
  (setq org-agenda-files (list (concat org-directory "todo.org")
                               "~/Dropbox/bibliography/notes.org"))
#+END_SRC
* Misc
Here are a few miscellaneous things that make org mode better. 
#+BEGIN_SRC emacs-lisp
  (setq org-pretty-entities          t
        org-support-shift-select     t)
  (setq org-log-done t)
  (use-package htmlize
    :ensure t)
#+END_SRC

For whatever reason, I have to explicitely tell org how to open pdf
links. I use pdf-tools, which is loaded in [[file:load-behavior.org][load-behavior]]. If pdf-tools
isn't installed, it will use doc-view (the default in emacs) instead. 

#+BEGIN_SRC emacs-lisp
  (setq org-file-apps
        '((auto-mode . emacs)
          ("\\.mm\\'" . default)
          ("\\.x?html?\\'" . default)
          ("\\.pdf\\'" . emacs)))

#+END_SRC
